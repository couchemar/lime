lime <- modules / expression ~;
modules <- space? module space? ~;
module <- 'module' space module_name `{module, lists:nth(3, Node), Idx}`;
module_name <- A* `binary_to_atom(list_to_binary(lists:flatten(Node)), utf8)`;
expression <- let_value / let_func / D ~;
let_value <- 'let' space name space? '=' space? let_body ~;
let_func <- 'let' space name func_arg+ space? '=' space? let_body ~;
func_arg <- space name ~;
let_body <- expression;
name <- A ~;
value <- D ~;
space <- [ \t\n\s\r]* ~;
A <- U / L / D ~;
U <- [A-Z] ~;
L <- [a-z] ~;
D <- [0-9] ~;